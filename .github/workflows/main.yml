name: Deploy

on:
  push:
    branches:
      - test
      
env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}
  NAME: backend-server
      
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      ## jdk setting
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu' # https://github.com/actions/setup-java
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: print organ repo
        run: echo ${{ env.DOCKER_IMAGE }}
        
      - name: print repo owner
        run: echo ${{ github.repository_owner }}
        
      ## gradle caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      ## gradle build
      - name: Build with Gradle
        run: ./gradlew build -x test
        
      ## docker build & push to production
      - name: Docker build & push to prod
        run: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
            docker buildx create --name arm64builder --use
            docker buildx build --platform linux/arm64,linux/amd64 -f Dockerfile -t ab5265/sbsj-back:latest --push .
            docker logout

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Webhook
        uses: joelwmale/webhook-action@{SHA-1}
        with:
          url: ${{ secrets.WEBHOOK_URL }}
          
     
      
